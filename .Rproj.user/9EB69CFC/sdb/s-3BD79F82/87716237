{
    "contents" : "context(\"can calculate likelihoods\")\ntest_that(\"can calculate likelihoods\", {\n  data(chelonia.simmap)\n  tree <- chelonia.simmap$tree\n  dat <- chelonia.simmap$dat\n  emap <- chelonia.simmap$emap\n  cache <- .prepare.ou.univariate(tree, dat)\n  pars <- list(alpha=0.1, sig2=1, k=16, theta=c(3,4,5,6), ntheta=4)\n  QGpars <- list(h2=1,P=1,w2=9,Ne=1,k=16,theta=c(3,4,5,6), ntheta=4)\n  TotExp <- exp(-cache$height*pars$alpha)\n  expect_that(is.finite(emOU.lik(pars,emap,cache,dat,SE=0.1,model=\"OU\")$loglik[1]),is_true())\n  expect_that(emOU.lik(pars,emap,tree,dat,SE=0.1,model=\"OU\")$loglik[1],\n              equals(emOU.lik(pars,emap,cache,dat,SE=0.1,model=\"OU\",method=\"invert\")$loglik))\n  expect_that(emOU.lik(pars,emap,cache,dat,SE=0.1,model=\"OU\")$loglik[1],\n              equals(emOU.lik(pars,emap,cache,dat,SE=0.1,model=\"OU\",method=\"invert\")$loglik))\n  expect_that(.emOU.lik(pars,emap,cache,dat,SE=0.1,model=\"OU\")$loglik[1],\n              equals(emOU.lik(pars,emap,cache,dat,SE=0.1,model=\"OU\",method=\"invert\")$loglik))\n  expect_that(emOU.lik(QGpars,emap,cache,dat,SE=0.1,model=\"QG\")$loglik[1],\n              equals(emOU.lik(pars,emap,cache,dat,SE=0.1,model=\"OU\",method=\"invert\")$loglik))\n  expect_that(.emOU.lik(QGpars,emap,cache,dat,SE=0.1,model=\"QG\")$loglik[1],\n              equals(emOU.lik(pars,emap,cache,dat,SE=0.1,model=\"OU\",method=\"invert\")$loglik))\n  expect_that(smOU.lik(pars,tree,dat,SE=0.1,model=\"OU\")$loglik[1],\n              equals(emOU.lik(pars,emap,cache,dat,SE=0.1,model=\"OU\",method=\"invert\")$loglik))\n  expect_that(smOU.lik(QGpars,tree,dat,SE=0.1,model=\"QG\")$loglik[1],\n              equals(emOU.lik(pars,emap,cache,dat,SE=0.1,model=\"OU\",method=\"invert\")$loglik))\n  expect_that(.smOU.lik(pars,cache,dat,SE=0.1,model=\"OU\")$loglik[1],\n              equals(emOU.lik(pars,emap,cache,dat,SE=0.1,model=\"OU\",method=\"invert\")$loglik))\n  expect_that(.smOU.lik(QGpars,cache,dat,SE=0.1,model=\"QG\")$loglik[1],\n              equals(emOU.lik(pars,emap,cache,dat,SE=0.1,model=\"OU\",method=\"invert\")$loglik))\n  pars$sb <- which(emap$sh==1)\n  pars$loc <- emap$r1[emap$sh==1]\n  pars$t2 <- emap$t2[emap$sh==1]\n  QGpars$sb <- which(emap$sh==1)\n  QGpars$loc <- emap$r1[emap$sh==1]\n  QGpars$t2 <- emap$t2[emap$sh==1]\n  expect_that(.OU.lik(pars,cache,dat,SE=0.1,model=\"OU\")$loglik[1],\n              equals(emOU.lik(pars,emap,cache,dat,SE=0.1,model=\"OU\",method=\"invert\")$loglik))\n  expect_that(OU.lik(pars,cache,dat,SE=0.1,model=\"OU\")$loglik[1],\n              equals(emOU.lik(pars,emap,cache,dat,SE=0.1,model=\"OU\",method=\"invert\")$loglik))\n  expect_that(.OU.lik(QGpars,cache,dat,SE=0.1,model=\"QG\")$loglik[1],\n              equals(emOU.lik(pars,emap,cache,dat,SE=0.1,model=\"OU\",method=\"invert\")$loglik))\n  })\n",
    "created" : 1380047791343.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "196966630",
    "id" : "87716237",
    "lastKnownWriteTime" : 1380048331,
    "path" : "~/repos/bayou/bayou_1.0/inst/tests/test-likelihood.r",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}